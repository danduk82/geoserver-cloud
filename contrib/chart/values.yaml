# Default values for geoserver.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

serviceAccount:
  create: true
  annotations: {}
  name: ""

jdbcconfig:
  url: jdbc:postgresql://database:5432/geoserver_config
  username: geoserver
  password: geoserver

config:
  replicaCount: 1
  image:
    repository: geoservercloud/geoserver-cloud-config
    pullPolicy: Always
    tag: "1.0-SNAPSHOT"

    command:
      - dockerize
      - -wait
      - http://geoserver-discovery:8761/actuator/health
      - --timeout
      - 15s
      - java
      - -Xmx128m
      - -XX:ActiveProcessorCount=2
      - -jar
      - /opt/app/config-service.jar

  env:
    - name: EUREKA_SERVER_URL
      value: "http://geoserver-discovery:8761/eureka"
    - name: JAVA_OPTS
      value: "-Xmx128m -XX:ActiveProcessorCount=2"
    - name: RABBITMQ_HOST
      value: ""

  podAnnotations: {}

  podSecurityContext: {}

  securityContext: {}

  resources: {}

  nodeSelector: {}

  tolerations: []

  affinity: {}

  service:
    type: ClusterIP
    port: 8080

gateway:
  replicaCount: 1
  image:
    repository: geoservercloud/geoserver-cloud-gateway
    pullPolicy: Always
    tag: "1.0-SNAPSHOT"

  command:
    - dockerize
    - -wait
    - http://geoserver-config:8080/gateway-service/default
    - --timeout
    - 30s
    - java
    - -Xmx128m
    - -XX:ActiveProcessorCount=4
    - -jar
    - /opt/app/gateway-service.jar
  env:
    - name: EUREKA_SERVER_URL
      value: "http://geoserver-discovery:8761/eureka"
    - name: JAVA_OPTS
      value: "-Xmx128m -XX:ActiveProcessorCount=4"

  podAnnotations: {}

  podSecurityContext: {}

  securityContext: {}

  resources: {}

  nodeSelector: {}

  tolerations: []

  affinity: {}

  service:
    type: ClusterIP
    port: 8080

  ingress:
    enabled: false

discovery:
  replicaCount: 1
  image:
    repository: geoservercloud/geoserver-cloud-discovery
    pullPolicy: Always
    tag: "1.0-SNAPSHOT"

  env:
    - name: JAVA_OPTS
      value: "-Xmx128m -XX:ActiveProcessorCount=2"

  podAnnotations: {}

  podSecurityContext: {}

  securityContext: {}

  resources: {}

  nodeSelector: {}

  tolerations: []

  affinity: {}

  service:
    type: ClusterIP
    port: 8761

webui:
  replicaCount: 1
  image:
    repository: geoservercloud/geoserver-cloud-webui
    pullPolicy: Always
    tag: "1.0-SNAPSHOT"
  command:
    - dockerize
    - -wait
    - http://geoserver-config:8080/web-ui/default
    - --timeout
    - 30s
    - java
    - -Xms64m
    - -Xmx512m
    - -XX:ActiveProcessorCount=2
    - -jar
    - /opt/app/web-ui-service.jar
  env:
    - name: JAVA_OPTS
      value: "-Xms64m -Xmx512m -XX:ActiveProcessorCount=2"
    - name: EUREKA_SERVER_URL
      value: "http://geoserver-discovery:8761/eureka"
    - name: RABBITMQ_HOST
      value: geoserver-rabbitmq

  podAnnotations: {}

  podSecurityContext: {}

  securityContext: {}

  resources: {}

  nodeSelector: {}

  tolerations: []

  affinity: {}

  service:
    type: ClusterIP
    port: 8080

rest:
  replicaCount: 1
  image:
    repository: geoservercloud/geoserver-cloud-rest
    pullPolicy: Always
    tag: "1.0-SNAPSHOT"
  command:
    - dockerize
    - -wait
    - http://geoserver-config:8080/restconfig-service/default
    - --timeout
    - 30s
    - java
    - -Xms64m
    - -Xmx256m
    - -XX:ActiveProcessorCount=2
    - -jar
    - /opt/app/restconfig-service.jar
  env:
    - name: JAVA_OPTS
      value: "-Xms64m -Xmx256m -XX:ActiveProcessorCount=2"
    - name: EUREKA_SERVER_URL
      value: "http://geoserver-discovery:8761/eureka"
    - name: RABBITMQ_HOST
      value: geoserver-rabbitmq

  podAnnotations: {}

  podSecurityContext: {}

  securityContext: {}

  resources: {}

  nodeSelector: {}

  tolerations: []

  affinity: {}

  service:
    type: ClusterIP
    port: 8080

wfs:
  replicaCount: 1
  image:
    repository: geoservercloud/geoserver-cloud-wfs
    pullPolicy: Always
    tag: "1.0-SNAPSHOT"
  command:
    - dockerize
    - -wait
    - http://geoserver-config:8080/wfs-service/default
    - --timeout
    - 30s
    - java
    - -Xmx256m
    - -XX:ActiveProcessorCount=2
    - -jar
    - /opt/app/wfs-service.jar
  env:
    - name: JAVA_OPTS
      value: "-Xmx256m -XX:ActiveProcessorCount=2"
    - name: EUREKA_SERVER_URL
      value: "http://geoserver-discovery:8761/eureka"
    - name: RABBITMQ_HOST
      value: geoserver-rabbitmq

  podAnnotations: {}

  podSecurityContext: {}

  securityContext: {}

  resources: {}

  nodeSelector: {}

  tolerations: []

  affinity: {}

  service:
    type: ClusterIP
    port: 8080

wms:
  replicaCount: 1
  image:
    repository: geoservercloud/geoserver-cloud-wms
    pullPolicy: Always
    tag: "1.0-SNAPSHOT"
  command:
    - dockerize
    - -wait
    - http://geoserver-config:8080/wms-service/default
    - --timeout
    - 30s
    - java
    - -Xms64m
    - -Xmx1g
    - -XX:ActiveProcessorCount=2
    - -jar
    - /opt/app/wms-service.jar
  env:
    - name: JAVA_OPTS
      value: "-Xms64m -Xmx1g -XX:ActiveProcessorCount=2"
    - name: EUREKA_SERVER_URL
      value: "http://geoserver-discovery:8761/eureka"
    - name: RABBITMQ_HOST
      value: geoserver-rabbitmq

  podAnnotations: {}

  podSecurityContext: {}

  securityContext: {}

  resources: {}

  nodeSelector: {}

  tolerations: []

  affinity: {}

  service:
    type: ClusterIP
    port: 8080

wcs:
  replicaCount: 1
  image:
    repository: geoservercloud/geoserver-cloud-wcs
    pullPolicy: Always
    tag: "1.0-SNAPSHOT"
  command:
    - dockerize
    - -wait
    - http://geoserver-config:8080/wcs-service/default
    - --timeout
    - 30s
    - java
    - -Xms64m
    - -Xmx1g
    - -XX:ActiveProcessorCount=4
    - -jar
    - /opt/app/wcs-service.jar
  env:
    - name: JAVA_OPTS
      value: "-Xms64m -Xmx1g -XX:ActiveProcessorCount=4"
    - name: EUREKA_SERVER_URL
      value: "http://geoserver-discovery:8761/eureka"
    - name: RABBITMQ_HOST
      value: geoserver-rabbitmq

  podAnnotations: {}

  podSecurityContext: {}

  securityContext: {}

  resources: {}

  nodeSelector: {}

  tolerations: []

  affinity: {}

  service:
    type: ClusterIP
    port: 8080

